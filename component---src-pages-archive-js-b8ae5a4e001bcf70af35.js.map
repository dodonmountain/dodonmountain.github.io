{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["pageQuery","ArchivePage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","title","keywords","className","map","post","tags","node","frontmatter","to","fields","slug","key","id","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags"],"mappings":"iQAyDiBA,EAAS,aAwCLC,UAvFD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAetC,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKG,MAAM,UAAUC,SAAU,CAAC,SAAD,2DAC/B,yBAAKC,UAAU,cACf,yBAAKA,UAAU,qBACf,kBAAC,IAAD,OAEA,yBAAKA,UAAU,kBACf,wBAAIA,UAAU,mCAAd,aACCR,EAAMS,KAAI,SAACC,GACJ,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,kBAAC,OAAD,CAAMG,GAAIJ,EAAKE,KAAKG,OAAOC,KAAMR,UAAU,iCACzC,yBAAKS,IAAKP,EAAKE,KAAKM,GAAIV,UAAU,kCAClC,wBAAIA,UAAU,wBAAwBE,EAAKE,KAAKC,YAAYP,OAC5D,2BAAOE,UAAU,6BAA4B,2BAAIE,EAAKE,KAAKC,YAAYM,KAA1B,UAC7C,yBAAKX,UAAU,OACb,uBAAGA,UAAU,iBAAiBE,EAAKE,KAAKQ,UAE1C,yBAAKZ,UAAU,gBAhCX,SAACG,GACnB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBrB,EAAOmB,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KAAK,kBAAC,IAAD,CAAST,IAAKO,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIjHT,EAwBUU,CAAYpB","file":"component---src-pages-archive-js-b8ae5a4e001bcf70af35.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst ArchivePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const labels = data.site.siteMetadata.labels\n  \n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n        }\n      })\n    })\n    return techTags\n  }\n  \n  \n  return (\n    <Layout>\n    <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n    <div className=\"index-main\">\n    <div className=\"sidebar px-4 py-2\">\n    <Sidebar />\n    </div>\n    <div className=\"post-list-main\">\n    <h2 className=\"heading mt-5 border-bottom pb-3\">ALL POSTS</h2>\n    {posts.map((post) => {\n            const tags = post.node.frontmatter.tags\n            return (\n                <Link to={post.node.fields.slug} className=\"text-dark container post-card\">\n                  <div key={post.node.id} className=\"py-3 bg-light border shadow-lg\">\n                  <h2 className=\"title mb-2 text-dark\">{post.node.frontmatter.title}</h2>\n                  <small className=\"d-block text-primary mb-3\"><i>{post.node.frontmatter.date}에 게시됨</i></small>\n                  <div className=\"m-1\">\n                    <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                  </div>\n                  <div className=\"d-block mt-3\">\n                    {getTechTags(tags)}\n                  </div>\n                  </div>\n                  </Link>)})}\n      </div>\n      </div>\n      </Layout>\n      )\n    }\n    \n    export const pageQuery = graphql`\n    query ArchiveQuery {\n      site {\n        siteMetadata {\n          title \n          author\n          labels {\n            tag\n            tech \n            name \n            size \n            color\n          } \n        }\n      }\n      allMarkdownRemark(\n        limit: 1000\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { published: { eq: true } }, id: {nin: \"5dca3d6f-52db-5c6a-a4a5-75fa9aa18d09\"} }\n        ) {\n          totalCount\n          edges {\n            node {\n              excerpt(pruneLength: 200)\n              html\n              id\n              frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                tags\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n      `\n      \n      export default ArchivePage\n      \n      "],"sourceRoot":""}