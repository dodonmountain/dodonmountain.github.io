{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["pageQuery","ArchivePage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","title","keywords","className","map","post","tags","node","frontmatter","to","fields","slug","key","id","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags"],"mappings":"iQA8DaA,EAAS,WAwCPC,UA5FK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAetC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MAAM,UAAUC,SAAU,CAAC,SAAD,2DAC/B,yBAAKC,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,gBAAd,QACCR,EAAMS,KAAI,SAACC,GACpB,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,kBAAC,OAAD,CACEG,GAAIJ,EAAKE,KAAKG,OAAOC,KACrBR,UAAU,sDAEV,yBAAKS,IAAKP,EAAKE,KAAKM,GAAIV,UAAU,2BAClC,wBAAIA,UAAU,0BAA0BE,EAAKE,KAAKC,YAAYP,OAEhE,2BAAOE,UAAU,6BAA4B,2BAAIE,EAAKE,KAAKC,YAAYM,KAA1B,UAE7C,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,yBAAKZ,UAAU,gBAnCP,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACfrB,EAAOmB,SAAQ,SAACG,GACRF,IAAQE,EAAMF,KACdF,EAASK,KAAK,kBAAC,IAAD,CAAST,IAAKO,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHT,EA2BIU,CAAYpB","file":"component---src-pages-archive-js-92bb66d846d32b807f88.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst ArchivePage = ({ data }) => {\n    const posts = data.allMarkdownRemark.edges\n    const labels = data.site.siteMetadata.labels\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <Layout>\n            <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-4 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                    <h2 className=\"heading mt-3\">아카이브</h2>\n                    {posts.map((post) => {\n            const tags = post.node.frontmatter.tags\n            return (\n                <Link\n                  to={post.node.fields.slug}\n                  className=\"text-dark text-decoration-none container post-card\"\n                >\n                  <div key={post.node.id} className=\"mt-3 pb-3 border-bottom\">\n                  <h2 className=\"title mb-2 text-danger\">{post.node.frontmatter.title}</h2>\n                \n                <small className=\"d-block text-primary mb-3\"><i>{post.node.frontmatter.date}에 게시됨</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <div className=\"d-block mt-3\">\n                  {getTechTags(tags)}\n                </div>\n              </div>\n              </Link>\n            )\n          })}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n         query ArchiveQuery {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: 1000\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default ArchivePage\n\n"],"sourceRoot":""}