{"version":3,"sources":["webpack:///./src/templates/post-list.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","title","keywords","className","map","post","tags","node","frontmatter","to","fields","slug","key","id","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"qRA0EaA,EAAS,YAyCPC,UAzGE,SAACC,GACd,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAASL,EAAME,KAAKI,KAAKC,aAAaF,OAFpB,EAGUL,EAAMQ,YAAhCC,EAHgB,EAGhBA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALS,EAGHG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAenC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKE,MAAM,OAAOC,SAAU,CAAC,SAAD,2DAC5B,yBAAKC,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,kBACf,wBAAIA,UAAU,mCAAd,aACCjB,EAAMkB,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,kBAAC,OAAD,CAAMG,GAAIJ,EAAKE,KAAKG,OAAOC,KAAMR,UAAU,iCACzC,yBAAKS,IAAKP,EAAKE,KAAKM,GAAIV,UAAU,kCAClC,wBAAIA,UAAU,wBAAwBE,EAAKE,KAAKC,YAAYP,OAC5D,2BAAOE,UAAU,6BAA4B,2BAAIE,EAAKE,KAAKC,YAAYM,KAA1B,UAC7C,yBAAKX,UAAU,OACb,uBAAGA,UAAU,iBAAiBE,EAAKE,KAAKQ,UAE1C,yBAAKZ,UAAU,gBAhCf,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACf7B,EAAO2B,SAAQ,SAACG,GACRF,IAAQE,EAAMF,KACdF,EAASK,KAAK,kBAAC,IAAD,CAAST,IAAKO,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIvHT,EAwBYU,CAAYpB,SAInB,yBAAKH,UAAU,0BACTR,GACE,kBAAC,OAAD,CAAMc,GAAIX,EAAU6B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,uCAAhB,cAGNP,GACE,kBAAC,OAAD,CAAMa,GAAIT,EAAU2B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACnD,0BAAM1B,UAAU,4CAAhB","file":"component---src-templates-post-list-js-f655fccd4cb9039ac784.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"../pages/index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst PostList = (props) => {\n    const posts = props.data.allMarkdownRemark.edges\n    const labels = props.data.site.siteMetadata.labels\n    const { currentPage, numPages } = props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-4 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                <h2 className=\"heading mt-5 border-bottom pb-3\">NEW POSTS</h2>\n                {posts.map((post) => {\n                  const tags = post.node.frontmatter.tags\n                  return (\n                      <Link to={post.node.fields.slug} className=\"text-dark container post-card\">\n                        <div key={post.node.id} className=\"py-3 bg-light border shadow-lg\">\n                        <h2 className=\"title mb-2 text-dark\">{post.node.frontmatter.title}</h2>\n                        <small className=\"d-block text-primary mb-3\"><i>{post.node.frontmatter.date}에 게시됨</i></small>\n                        <div className=\"m-1\">\n                          <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                        </div>\n                        <div className=\"d-block mt-3\">\n                          {getTechTags(tags)}\n                        </div>\n                        </div>\n                        </Link>)})}\n                    <div className=\"text-center mt-4 pb-4\">\n                        {!isFirst && (\n                            <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark page-indicator p-2 border\">← 이전 페이지</span>\n                            </Link>\n                        )}\n                        {!isLast && (\n                            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark ml-5 page-indicator p-2 border\">다음 페이지 →</span>\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const listQuery = graphql`\n         query paginateQuery($skip: Int!, $limit: Int!) {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: $limit\n             skip: $skip\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } },id: {nin: \"5dca3d6f-52db-5c6a-a4a5-75fa9aa18d09\"} }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default PostList\n"],"sourceRoot":""}